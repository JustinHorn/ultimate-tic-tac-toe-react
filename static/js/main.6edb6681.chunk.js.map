{"version":3,"sources":["components/SettingsForm.js","components/Square.js","components/util/GameUtil.js","components/Board.js","components/AI.js","components/util/Field.js","components/PlayerSettings.js","components/CountDown.js","components/GameSideBar.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["SettingsForm","props","defaults","defaultValues","state","boardSize","clock","time","handleChange","bind","handleSubmit","event","target","this","handleTarget","value","type","checked","name","console","log","setState","submitCallback","preventDefault","Button","size","onClick","className","Checkbox","label","onChange","a","b","Input","max","min","React","Component","squareColors","Square","style","display","color","winner","background","clickable","generateGridNxN","generatorFunction","rows","i","cols","j","push","key","Board","renderSquare","squares","getRandomMove","data","items","moves","Field","getMoves","Math","floor","random","length","localWinners","forEach","field","outer_idx","activeFields","x","inner_idx","getMove","move","undefined","xIsNext","Error","map","slice","calc3x3","Array","fill","tree","hasChildren","dataIsOver","getNextData","Results","VICTORY","DEFEAT","DRAW","o","matches","winCombinations","charAt","calcWinner","defaultPlayers","p1","p2","aiP1T","aiP2T","humanVsHuman","dropdownOptions","text","PlayerSettings","players","callBackPlayer","handlePlayers","handlePlayerTarget","copy","Dropdown","inline","options","defaultValue","CountDown","elapsed","tick","prevState","dt","Date","lastTick","seconds","timeOverCallback","player","clearInterval","timer","setInterval","remaining","minutes","isPaused","pause","resume","GameSidebar","id","status","indexOf","setStatus","timerXPaused","Boolean","timerOPaused","getClock","gamestartStats","Game","workerApi","workers","getAIMove","t","removeWorkers","getWorker","doMove","w","noUpdateOccured","handleClick","getIdWorkerId","then","getMonteCarloMove","worker","Worker","wrap","getPlayer","setPlayer","onPlayerChange","nextData","renderBoard","p","handleAI","timeOver","Grid","render","renderInfo","defaultSettings","App","matchID","newGame","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6edb6681.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Input, Checkbox, Button } from \"semantic-ui-react\";\r\n\r\nexport default class SettingsForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let defaults = this.props.defaultValues;\r\n    this.state = {\r\n      boardSize: 3,\r\n      clock: defaults.clock,\r\n      time: defaults.time,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    this.handleTarget(target);\r\n  }\r\n\r\n  handleTarget(target) {\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = target.name;\r\n    if (name === \"clock\") {\r\n      console.log(\"Clock: \" + target.value);\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.props.submitCallback(this.state.clock, this.state.time);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <Button size=\"mini\" onClick={this.handleSubmit}>\r\n          {\" \"}\r\n          new Game\r\n        </Button>\r\n        <label className=\"settings-label\">\r\n          <Checkbox\r\n            label=\"Clock\"\r\n            name=\"clock\"\r\n            type=\"checkbox\"\r\n            onChange={(a, b) => this.handleTarget(b)}\r\n          />\r\n        </label>\r\n        {this.state.clock && (\r\n          <label className=\"settings-label\">\r\n            <Input\r\n              label=\"Time (min)\"\r\n              size=\"mini\"\r\n              name=\"time\"\r\n              type=\"number\"\r\n              max=\"100\"\r\n              min=\"1\"\r\n              value={this.state.time}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport const squareColors = {\r\n  X: \"#fc7341\",\r\n  O: \"#2db2e2\",\r\n  WINNER_X: \"#ffccb5\",\r\n  WINNER_O: \"#dbf5ff\",\r\n  DRAW: \"#F0F8FF\",\r\n  CLICKABLE: \"#e2ffec\",\r\n};\r\n\r\nexport default function Square(props) {\r\n  var style = { display: \"inline-block\" };\r\n  if (props.value) {\r\n    style.color = props.value === \"X\" ? squareColors.X : squareColors.O;\r\n  }\r\n  if (props.winner) {\r\n    if (props.winner === \"X\") {\r\n      style.background = squareColors.WINNER_X;\r\n    } else if (props.winner === \"O\") {\r\n      style.background = squareColors.WINNER_O;\r\n    } else {\r\n      style.background = squareColors.DRAW;\r\n    }\r\n  }\r\n  if (props.clickable) {\r\n    style.background = squareColors.CLICKABLE;\r\n  }\r\n  return (\r\n    <button\r\n      className=\"square\"\r\n      style={style}\r\n      onClick={() => {\r\n        if (props.clickable) {\r\n          props.onClick();\r\n        }\r\n      }}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nlet lastId = 0;\r\n\r\nconst uniqueid = (prefix = \"id\") => {\r\n  return `${lastId++}`;\r\n};\r\n","import React from \"react\";\r\n\r\n/*\r\n * Generates a grid of NxN elements. Expects 3 parameters:\r\n *\r\n ** className: A class-name for the CSS stylesheet. The global name of the\r\n\tgrid will be equal to the provided className; the name of each row\r\n\twill be equal to className + '-row'.\r\n ** size: The grid's size.\r\n ** generatorFunction: Custom function to create each element. This function\r\n    must take an integer as unique parameter and return a valid React element.\r\n */\r\nexport default function generateGridNxN(className, size, generatorFunction) {\r\n  var rows = [];\r\n  for (let i = 0; i < size; i++) {\r\n    let cols = [];\r\n    for (let j = 0; j < size; j++) {\r\n      cols.push(generatorFunction(i * size + j));\r\n    }\r\n    rows.push(\r\n      <div className={className + \"-row\"} key={i}>\r\n        {cols}\r\n      </div>\r\n    );\r\n  }\r\n  return <div className={className}>{rows}</div>;\r\n}\r\n","import React from \"react\";\r\nimport Square from \"./Square.js\";\r\nimport generateGridNxN from \"./util/GameUtil.js\";\r\n\r\nexport default class Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderSquare = this.renderSquare.bind(this);\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        key={i}\r\n        value={this.props.squares[i]}\r\n        winner={this.props.winner}\r\n        clickable={!this.props.squares[i] && this.props.clickable}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return generateGridNxN(\"board\", this.props.size, this.renderSquare);\r\n  }\r\n}\r\n","import Field from \"./util/Field\";\r\nimport Tree from \"./util/Tree\";\r\n\r\nexport function getRandomMove(data) {\r\n  const moves = Field.getMoves(data);\r\n  return random_item(moves);\r\n}\r\n\r\nfunction random_item(items) {\r\n  return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nexport function getMonteCarloMove(data, time) {\r\n  const tree = new Tree(data, null, null, Date.now());\r\n  evaluateMoves(tree, time);\r\n  return tree.getMostUsed().move;\r\n}\r\n\r\nfunction evaluateMoves(tree, time) {\r\n  const startTime = Date.now();\r\n  let x = 0;\r\n  while (Date.now() - startTime < time) {\r\n    evaluate(tree);\r\n    x++;\r\n  }\r\n  console.log(\"Simulations: \" + x);\r\n}\r\n\r\nexport function evaluate(tree) {\r\n  while (tree.hasChildren()) {\r\n    tree = tree.getBestNode();\r\n  }\r\n  if (!tree.isOver()) {\r\n    tree.makeChildren();\r\n    tree = tree.getRandomChild();\r\n  }\r\n  let result = Field.propagate(tree);\r\n  tree.update(result);\r\n}\r\n","import { getRandomMove } from \"../AI\";\r\nimport { squareColors } from \"../Square\";\r\n\r\nexport default class Field {\r\n  static getMoves(data) {\r\n    let moves = [];\r\n    data.localWinners.forEach((field, outer_idx) => {\r\n      if (field === null && data.activeFields[outer_idx]) {\r\n        data.squares[outer_idx].forEach((x, inner_idx) => {\r\n          if (x === null) {\r\n            moves.push(Field.getMove(inner_idx, outer_idx));\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return moves;\r\n  }\r\n\r\n  static getNextData(data, move) {\r\n    if (data.xIsNext === undefined) {\r\n      throw Error(\"Data xIsNext is undefined\");\r\n    }\r\n\r\n    let squares = data.squares.map((x) => x.slice());\r\n\r\n    if (!move || squares[move.outer_idx][move.inner_idx]) {\r\n      console.log(\"hello\");\r\n      throw Error(\"field already taken\");\r\n    }\r\n    if (!data.activeFields[move.outer_idx]) {\r\n      throw Error(\"field inactive\");\r\n    }\r\n\r\n    squares[move.outer_idx][move.inner_idx] = data.xIsNext ? \"X\" : \"O\";\r\n    const localWinners = squares.map((x) => Field.calc3x3(x));\r\n    const winner = Field.calc3x3(localWinners);\r\n    let activeFields = data.activeFields.slice();\r\n    if (localWinners[move.inner_idx]) {\r\n      localWinners.forEach((x, i) => (activeFields[i] = x ? false : true));\r\n    } else {\r\n      activeFields = activeFields.map((x, i) => i === move.inner_idx);\r\n    }\r\n\r\n    if (winner) {\r\n      activeFields = Array(9).fill(false);\r\n    }\r\n\r\n    return {\r\n      winner: winner,\r\n      squares: squares,\r\n      localWinners: localWinners,\r\n      activeFields: activeFields,\r\n      xIsNext: !data.xIsNext,\r\n    };\r\n  }\r\n\r\n  static getMove = (i, o) => {\r\n    return { inner_idx: i, outer_idx: o };\r\n  };\r\n\r\n  static calc3x3 = (field) => {\r\n    field = field.map((x) => (x ? x : \" \"));\r\n    var matches = [\"XXX\", \"OOO\"];\r\n\r\n    var winCombinations = [\r\n      field[0] + field[1] + field[2], // 1st line\r\n      field[3] + field[4] + field[5], // 2nd line\r\n      field[6] + field[7] + field[8], // 3rd line\r\n      field[0] + field[3] + field[6], // 1st column\r\n      field[1] + field[4] + field[7], // 2nd column\r\n      field[2] + field[5] + field[8], // 3rd column\r\n      field[0] + field[4] + field[8], // Primary diagonal\r\n      field[2] + field[4] + field[6], // Secondary diagonal\r\n    ];\r\n\r\n    // Loop through all the rows looking for a match\r\n    for (var i = 0; i < winCombinations.length; i++) {\r\n      if (\r\n        winCombinations[i] === matches[0] ||\r\n        winCombinations[i] === matches[1]\r\n      ) {\r\n        return winCombinations[i].charAt(0);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  static calcWinner = (squares) => {\r\n    return Field.calc3x3(squares.map((x) => Field.calc3x3(x)));\r\n  };\r\n\r\n  static dataIsOver(data) {\r\n    return Field.getMoves(data).length === 0;\r\n  }\r\n\r\n  static propagate(tree) {\r\n    let data = tree.data;\r\n    if (tree.hasChildren()) {\r\n      throw Error(\"Tree shouldn't have children\");\r\n    } else {\r\n      let winner = Field.calc3x3(data.localWinners);\r\n      while (!Field.dataIsOver(data)) {\r\n        data = Field.getNextData(data, getRandomMove(data));\r\n        winner = data.winner;\r\n      }\r\n      if (winner) {\r\n        return winner === (tree.data.xIsNext ? \"O\" : \"X\")\r\n          ? Results.VICTORY\r\n          : Results.DEFEAT;\r\n      } else {\r\n        return Results.DRAW;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const Results = {\r\n  VICTORY: 1,\r\n  DEFEAT: -1,\r\n  DRAW: 0,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown, Input } from \"semantic-ui-react\";\r\n\r\nexport const defaultPlayers = {\r\n  p1: \"AI\",\r\n  p2: \"AI\",\r\n  aiP1T: 1,\r\n  aiP2T: 1,\r\n};\r\n\r\nexport const humanVsHuman = {\r\n  p1: \"human\",\r\n  p2: \"human\",\r\n  aiP1T: 1,\r\n  aiP2T: 1,\r\n};\r\n\r\nexport const dropdownOptions = [\r\n  { key: \"h\", value: \"human\", text: \"human\" },\r\n  { key: \"rAI\", value: \"rAI\", text: \"random AI\" },\r\n  { key: \"a\", value: \"AI\", text: \"AI\" },\r\n];\r\n\r\nclass PlayerSettings extends Component {\r\n  state = {\r\n    players: this.props.players, //TODO: change!\r\n    callBackPlayer: this.props.callBackPlayer,\r\n  };\r\n\r\n  handlePlayers = (event) => {\r\n    const target = event.target;\r\n    this.handlePlayerTarget(target);\r\n  };\r\n\r\n  handlePlayerTarget = (name, target) => {\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    let copy = { ...this.state.players };\r\n    copy[name] = value;\r\n    this.setState({ players: copy });\r\n    if (this.state.callBackPlayer) {\r\n      this.state.callBackPlayer(copy);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Dropdown\r\n          inline\r\n          options={dropdownOptions}\r\n          name=\"p1\"\r\n          onChange={(a, b) => this.handlePlayerTarget(\"p1\", b)}\r\n          defaultValue={this.state.players.p1}\r\n        />{\" \"}\r\n        vs.{\" \"}\r\n        <Dropdown\r\n          inline\r\n          name=\"p2\"\r\n          options={dropdownOptions}\r\n          defaultValue={this.state.players.p2}\r\n          onChange={(a, b) => this.handlePlayerTarget(\"p2\", b)}\r\n        />\r\n        {this.state.players.p1 === \"AI\" && (\r\n          <label className=\"settings-label\">\r\n            <Input\r\n              label=\"AI player1 time (s)\"\r\n              size=\"mini\"\r\n              name=\"aiP1T\"\r\n              type=\"number\"\r\n              min=\"0.001\"\r\n              max=\"9\"\r\n              value={this.state.players.aiP1T}\r\n              onChange={(a, b) => this.handlePlayerTarget(\"aiP1T\", b)}\r\n            />\r\n          </label>\r\n        )}\r\n        {this.state.players.p2 === \"AI\" && (\r\n          <label className=\"settings-label\">\r\n            <Input\r\n              label=\"AI player2 time (s)\"\r\n              size=\"mini\"\r\n              name=\"aiP2T\"\r\n              min=\"0.001\"\r\n              type=\"number\"\r\n              max=\"9\"\r\n              value={this.state.players.aiP2T}\r\n              onChange={(a, b) => this.handlePlayerTarget(\"aiP2T\", b)}\r\n            />\r\n          </label>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerSettings;\r\n","import React from \"react\";\r\n\r\nexport default class CountDown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.lastTick = null;\r\n  }\r\n\r\n  state = { elapsed: 0 };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  tick = () => {\r\n    this.setState((prevState, props) => {\r\n      var now = new Date();\r\n      const dt = now - this.lastTick;\r\n      const elapsed = prevState.elapsed + dt;\r\n      // Check if time is over\r\n      const remaining = props.seconds - elapsed / 1000;\r\n      if (remaining < 0.15) {\r\n        props.timeOverCallback(props.player);\r\n      }\r\n      return {\r\n        elapsed: elapsed,\r\n      };\r\n    });\r\n    this.lastTick = new Date();\r\n  };\r\n\r\n  pause() {\r\n    clearInterval(this.timer);\r\n    this.timer = null;\r\n    this.lastTick = null;\r\n  }\r\n\r\n  resume() {\r\n    this.timer = setInterval(this.tick, 1000);\r\n    this.lastTick = new Date();\r\n  }\r\n\r\n  render() {\r\n    const remaining =\r\n      this.props.seconds - Math.floor(this.state.elapsed / 1000);\r\n    const minutes = Math.floor(remaining / 60);\r\n    const seconds = remaining % 60;\r\n\r\n    if (this.props.isPaused) {\r\n      // console.log('Pause!!');\r\n      this.pause();\r\n    } else if (!this.timer) {\r\n      // console.log('Resume!!');\r\n      this.resume();\r\n    }\r\n\r\n    return (\r\n      <p className=\"countdown\">\r\n        {(\"0\" + minutes).slice(-2)}:{(\"0\" + seconds).slice(-2)}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport CountDown from \"./CountDown.js\";\r\nimport Field from \"./util/Field\";\r\n\r\nexport default function GameSidebar(props) {\r\n  return (\r\n    <div className=\"game-info\">\r\n      <div id=\"status\">{setStatus(props.state)}</div>\r\n      {props.clock && getClock(props.timeOverCallback, props.time, props.state)}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getClock(timeOverCallback, time, state) {\r\n  const timerXPaused = !state.xIsNext || Boolean(state.winner);\r\n  const timerOPaused = state.xIsNext || Boolean(state.winner);\r\n  return (\r\n    <div>\r\n      [TIME] X:{\" \"}\r\n      <CountDown\r\n        key={1}\r\n        player=\"X\"\r\n        seconds={time * 60}\r\n        isPaused={timerXPaused}\r\n        timeOverCallback={timeOverCallback}\r\n      />\r\n      , O:{\" \"}\r\n      <CountDown\r\n        key={2}\r\n        player=\"O\"\r\n        seconds={time * 60}\r\n        isPaused={timerOPaused}\r\n        timeOverCallback={timeOverCallback}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction setStatus(state) {\r\n  let status;\r\n  if (state.winner) {\r\n    status = state.winner + \" wins!\";\r\n\r\n    if (Field.calc3x3(state.localWinners) === null) {\r\n      status = \"Time over! \" + status;\r\n    }\r\n  } else {\r\n    if (state.localWinners.indexOf(null) === -1) {\r\n      status = \"Draw! Everybody wins!! :D\";\r\n      console.log(state);\r\n    } else {\r\n      status = \"Next player: \" + (state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n  }\r\n  return status;\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Board from \"./Board.js\";\r\nimport generateGridNxN from \"./util/GameUtil.js\";\r\nimport Field from \"./util/Field\";\r\nimport { humanVsHuman } from \"./PlayerSettings\";\r\n\r\nimport { wrap } from \"comlink\";\r\n\r\nimport GameSidebar from \"./GameSideBar\";\r\n\r\nimport PlayerSettings from \"./PlayerSettings\";\r\n\r\nexport const gamestartStats = {\r\n  squares: Array(3 * 3).fill(\r\n    // Outer squares\r\n    Array(3 * 3).fill(null)\r\n  ), // Inner squares\r\n  localWinners: Array(3 * 3).fill(null),\r\n  activeFields: Array(9).fill(true),\r\n  xIsNext: true,\r\n  winner: null,\r\n  size: 3,\r\n};\r\n\r\nexport default class Game extends Component {\r\n  state = {\r\n    ...gamestartStats,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.players) {\r\n      this.state.players = props.players;\r\n    } else {\r\n      this.state.players = humanVsHuman;\r\n    }\r\n  }\r\n\r\n  workerApi = undefined;\r\n  workers = [0];\r\n\r\n  getAIMove = (t, type) => {\r\n    this.removeWorkers();\r\n\r\n    this.getWorker();\r\n    const doMove = (move, w) => {\r\n      if (this.noUpdateOccured(w)) {\r\n        if (move) {\r\n          t.handleClick(move);\r\n        } else {\r\n          throw Error(\"move is undefined: \" + move);\r\n        }\r\n      }\r\n    };\r\n    let id = this.getIdWorkerId();\r\n    if (type === \"rAI\") {\r\n      this.workerApi.getRandomMove(t.state).then((move) => {\r\n        doMove(move, id);\r\n      });\r\n    } else if (type === \"AI\") {\r\n      let time = t.state.xIsNext\r\n        ? this.state.players.aiP1T\r\n        : this.state.players.aiP2T;\r\n      time = time * 1000;\r\n      this.workerApi.getMonteCarloMove(t.state, time).then((move) => {\r\n        doMove(move, id);\r\n      });\r\n    }\r\n  };\r\n\r\n  getIdWorkerId = () => {\r\n    let id = this.workers[0] + 1;\r\n    this.workers.push(id);\r\n    this.workers[0] = id + 1;\r\n    return id;\r\n  };\r\n\r\n  noUpdateOccured = (id) => {\r\n    return this.workers.indexOf(id) !== -1;\r\n  };\r\n\r\n  removeWorkers = () => {\r\n    this.workers = [this.workers[0]];\r\n  };\r\n\r\n  getWorker = () => {\r\n    if (!this.workerApi) {\r\n      const worker = new Worker(\"./webworker\", {\r\n        name: \"webworker\",\r\n        type: \"module\",\r\n      });\r\n      this.workerApi = wrap(worker);\r\n    }\r\n  };\r\n\r\n  getPlayer = () => {\r\n    return this.players;\r\n  };\r\n\r\n  setPlayer = (players) => {\r\n    this.setState({ players: { ...players } });\r\n    if (this.props.onPlayerChange) {\r\n      this.props.onPlayerChange(players);\r\n    }\r\n  };\r\n\r\n  handleClick = (move) => {\r\n    if (this.state.winner) {\r\n      return;\r\n    }\r\n    const nextData = Field.getNextData(this.state, move);\r\n\r\n    this.setState((prevState, props) => ({\r\n      ...nextData,\r\n    }));\r\n  };\r\n\r\n  renderBoard = (i) => {\r\n    return (\r\n      <Board\r\n        key={i}\r\n        size={3}\r\n        squares={this.state.squares[i]}\r\n        winner={this.state.localWinners[i]}\r\n        clickable={this.state.activeFields[i]}\r\n        onClick={(p) => this.handleClick(Field.getMove(p, i))}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    this.handleAI();\r\n    const { state } = this;\r\n    return (\r\n      <div>\r\n        <div className=\"Game-Settings\">\r\n          <PlayerSettings\r\n            callBackPlayer={this.setPlayer}\r\n            players={state.players}\r\n          />\r\n        </div>\r\n        <div className=\"game-container\">\r\n          <div className=\"game-row\">\r\n            <Grid render={this.renderBoard} />\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div className=\"game-container\">\r\n          {this.props.renderInfo && (\r\n            <GameSidebar\r\n              clock={this.props.clock}\r\n              timeOver={this.timeOver}\r\n              time={this.props.time}\r\n              state={state}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleAI = () => {\r\n    const { state } = this;\r\n    if (Field.getMoves(state).length > 0) {\r\n      if (state.xIsNext && state.players.p1 !== \"human\") {\r\n        this.getAIMove(this, state.players.p1);\r\n      } else if (!state.xIsNext && state.players.p2 !== \"human\") {\r\n        this.getAIMove(this, state.players.p2);\r\n      }\r\n    }\r\n  };\r\n\r\n  timeOver = (player) => {\r\n    if (player === \"X\") {\r\n      this.setState({ winner: \"O\" });\r\n    } else {\r\n      this.setState({ winner: \"X\" });\r\n    }\r\n  };\r\n}\r\n\r\nfunction Grid(props) {\r\n  return generateGridNxN(\"game\", 3, props.render);\r\n}\r\n","import React from \"react\";\r\nimport SettingsForm from \"./components/SettingsForm.js\";\r\nimport Game from \"./components/Game.js\";\r\nimport { defaultPlayers } from \"./components/PlayerSettings.js\";\r\n\r\nexport const defaultSettings = {\r\n  clock: false,\r\n  time: 10,\r\n};\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clock: defaultSettings.clock,\r\n      time: defaultSettings.time,\r\n      matchID: 0,\r\n    };\r\n    this.newGame = this.newGame.bind(this);\r\n  }\r\n  players = defaultPlayers;\r\n\r\n  newGame(clock, time) {\r\n    // console.log('New size is ' + size);\r\n    this.setState((prevState, props) => ({\r\n      clock: clock,\r\n      time: time,\r\n      matchID: prevState.matchID + 1,\r\n    }));\r\n  }\r\n\r\n  onPlayerChange = (player) => {\r\n    this.players = player;\r\n  };\r\n\r\n  updatePlayer(players) {}\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"container mt-2\">\r\n          <div className=\"row justify-content-center\">\r\n            <SettingsForm\r\n              defaultValues={this.state}\r\n              submitCallback={this.newGame}\r\n            />\r\n            <br />\r\n          </div>\r\n          <div className=\"row justify-content-center\">\r\n            <Game\r\n              key={this.state.matchID}\r\n              clock={this.state.clock}\r\n              time={this.state.time}\r\n              players={this.players}\r\n              onPlayerChange={this.onPlayerChange}\r\n              renderInfo={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App.js\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}